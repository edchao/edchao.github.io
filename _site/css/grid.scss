/* Horizontal Grid
======================================================== */

.brick, .bricks { margin:none; }
.one.brick { height: 10px; }
.two.bricks { height: 20px; }
.three.bricks { height: 30px; }
.four.bricks { height: 40px; }
.five.bricks { height: 50px; }
.six.bricks { height: 60px; }
.seven.bricks { height: 70px; }
.eight.bricks { height: 80px; }
.nine.bricks { height: 90px; }
.ten.bricks { height: 100px; }
.eleven.bricks { height: 110px; }
.twelve.bricks { height: 120px; }
.thirteen.bricks { height: 130px; }
.fourteen.bricks { height: 140px; }
.fifteen.bricks { height: 150px; }
.sixteen.bricks { height: 160px; }
.seventeen.bricks { height: 170px; }
.eighteen.bricks { height: 180px; }
.nineteen.bricks { height: 190px; }
.twenty.bricks { height: 200px; }
.thirty.bricks { height: 300px; }
.forty.bricks { height: 400px; }
.fifty.bricks { height: 500px; }
.sixty.bricks { height: 600px; }
.seventy.bricks { height: 700px; }
.eighty.bricks { height: 800px; }

.slat, .slats {margin:none;}
.fifteen-slats {width:150px;}



/* Grid Settings
  ========================================================================== */ 
  $column-count : 24;
  $gutter: $pad * 2;


/* Breakpoints
  ========================================================================== */ 
  $widescreen : 1200px;
  $desktop : 1100px;
  $laptop : 800px;
  $tablet : 500px;
  $mobile : 300px;

@mixin respond-to($type){
  @if $type == mobile{
    @media only screen and (min-width: $mobile + 1) and (max-width: $tablet) { @content; }
  }
  @elseif $type == tablet{
    @media only screen and (min-width: $tablet + 1) and (max-width: $laptop) { @content; }
  }
  @elseif $type == laptop {
    @media only screen and (min-width: $laptop + 1) and (max-width: $desktop) { @content; }
  }
  @elseif $type == desktop {
    @media only screen and (min-width: $desktop + 1) and (max-width: $widescreen) { @content }
  }
  @elseif $type == widescreen {
    @media only screen and (min-width: $widescreen + 1) { @content }
  }
}

.container {
  @include respond-to(mobile){
    width: $mobile;
  }
  @include respond-to(tablet){
    width: $tablet;
  }
  @include respond-to(laptop){
    width: $laptop;
  }
  @include respond-to(desktop){
    width: $desktop;
  }
  @include respond-to(widescreen){
    width: $widescreen;
  }
  margin: 0 auto;
}


/* Grid Generator
  ========================================================================== */ 

  @function generateCols ($n){
    @return ($n * 100% / $column-count);
  }


  @mixin col($n){

    width : generateCols($n);
    float : left;
    display : inline;

    @include respond-to(mobile){
      width: $mobile;
    }
  }

/* Gutter class
  ========================================================================== */ 

  .gutter-wrapper {
    margin: $gutter;
  }


/* #Clearing - by Dave Gamache
  ========================================================================== */

  .container:after { content: "\0020"; display: block; height: 0; clear: both; visibility:hidden;}
  
  .clearfix:before,
  .clearfix:after {
    content: '\0020';
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0; }
  .clearfix:after {
    clear: both; }
  .clearfix {
    zoom: 1; }

  /* You can also use a <br class="clear" /> to clear columns */
  .clear {
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
  }
